#!/bin/bash

usage()
{
	printf "USAGE: push <board> mmc [noboot|nokern]\n"
	printf "       push <board> net <ip-address> [noboot|nokern]\n"
}

if [ "x${2}" = "x" ]; then
	printf "Missing transfer type!\n"
	usage
	exit 1
fi

transfer_type=${2}

if [ "x${1}" = "x" ]; then
	printf "Missing target board!\n"
	usage
	exit 1
fi

target_board=${1}

board_dir="`dirname ${0}`/../../../rootfs/${target_board}/arm-cortexa8-linux-gnueabihf/target"

target_dir="`realpath -e ${board_dir}`"

case "${1}" in
	*am3517*|*beagle*|*torpedo*|*sama5d3*|*omap3*|*overo*)
		if ! [ -d ${target_dir} ]; then
			printf "Invalid Target Directory [${target_dir}]!\n"
			exit 1
		fi
		;;
	*)
		printf "Unknown Board [${target_board}]!\n"
		exit 1
		;;
esac

push_kernel="1"

echo "$@" | grep -q nokern
if [ "$?" = "0" ]; then
	push_kernel="0"
fi

push_bootloader="1"

echo "$@" | grep -q noboot
if [ "$?" = "0" ]; then
	push_bootloader="0"
fi

if [ "${push_kernel}" = "0" ] && [ "${push_bootloader}" = "0" ]; then
	printf "Invalid options: Cannot use both 'noboot' and 'nokern'!\n"
	usage
	exit 1
fi

send_list="lib/firmware"

case "${transfer_type}" in
	mmc)
		if [ -d /media/$USER ]; then
			media="/media/$USER"
		else
			if [ -d /run/media/$USER ]; then
				media="/run/media/$USER"
			else
				printf "Unknown SD/MMC media directory location!\n"
				exit 1
			fi
		fi
		# rootfs
		pushd ${target_dir}
		if [ "${push_kernel}" = "1" ]; then
			send_list="boot/*.dtb boot/uImage boot/zImage ${send_list}"
		fi
		if [ "${push_bootloader}" = "1" ]; then
			send_list="boot/uEnv.txt boot/MLO boot/u-boot.img ${send_list}"
		fi
		sudo rsync -aPR ${send_list} ${media}/rootfs/ && sync
		popd
		# BOOT
		pushd ${target_dir}/boot
		send_list=""
		if [ "${push_kernel}" = "1" ]; then
			send_list="*.dtb uImage zImage"
		fi
		if [ "${push_bootloader}" = "1" ]; then
			send_list="MLO u-boot.img uEnv.txt ${send_list}"
		fi
		rsync -P ${send_list} ${media}/BOOT/ && sync
		popd
		;;
	net)
		if [ "x${3}" = "x" ]; then
			printf "Missing IP address!\n"
			usage
			exit 1
		fi
		# rootfs
		pushd ${target_dir}
		if [ "${push_kernel}" = "1" ]; then
			send_list="boot/*.dtb boot/uImage boot/zImage ${send_list}"
		fi
		if [ "${push_bootloader}" = "1" ]; then
			send_list="boot/uEnv.txt boot/MLO boot/u-boot.img ${send_list}"
		fi
		rsync -aPR ${send_list} root@${3}:/
		popd
		# BOOT
		pushd ${target_dir}/boot
		send_list=""
		if [ "${push_kernel}" = "1" ]; then
			send_list="*.dtb uImage zImage"
		fi
		if [ "${push_bootloader}" = "1" ]; then
			send_list="MLO u-boot.img uEnv.txt ${send_list}"
		fi
		rsync -P ${send_list} root@${3}:/media/BOOT/
		popd
		;;
	*)
		printf "Transfer type [${transfer_type}] not implemented.\n"
		usage
		exit 1
esac
